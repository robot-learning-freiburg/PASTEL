# pytorch_lightning==1.8.6
seed_everything: 0

trainer:
  max_epochs: 150
  accelerator: gpu
  strategy: ddp_find_unused_parameters_false
  sync_batchnorm: True
  logger: False
  callbacks:
    - class_path: pytorch_lightning.callbacks.model_checkpoint.ModelCheckpoint
      init_args:
        dirpath: "checkpoints/"
        filename: "boundary_pascalvoc"
        every_n_epochs: 10

model:
  dinov2_vit_model: "vitb14"
  output_size: ${data_params.image_size_original}
  mode: "direct"
  upsample_factor: 4.0
  head: "mlp"
  neighbor_radius: 1.5
  threshold_boundary: 0.95
  num_boundary_neighbors: 1
  test_multi_scales: [3, 4, 5]
  refine_boundary: False
  refine_boundary_size: [ 180, 360 ] # [144, 288] [216, 432]
  test_plot: True
  test_save_dir: null
  test_save_vis: False

data:
  class_path: datasets.pascal_voc.PascalVOCDataModule
  init_args:
    cfg_dataset:
      name: "pascal_voc"
      path: "data/pascal_voc"
      feed_img_size: ${data_params.image_size_original}
      offsets: [ 0 ]
      center_heatmap_sigma: 8
      remove_classes: [ ]
    num_classes: 21
    batch_size: 1
    num_workers: 1
    transform_train:
      - class_path: utils.transforms.ToTensor
      - class_path: utils.transforms.RandomHorizontalFlip
      - class_path: utils.transforms.RandomResizedCrop
        init_args:
          size: ${data_params.image_size_input}
          scale: [0.4, 1.0]
      - class_path: utils.transforms.ColorJitter
        init_args:
          brightness: 0.2
          contrast: 0.2
          saturation: 0.2
          hue: 0.2
      - class_path: utils.transforms.MaskPostProcess
      - class_path: utils.transforms.ImageNormalize
        init_args:
          mean: ${data_params.image_mean}
          std: ${data_params.image_std}
    transform_test:
      - class_path: utils.transforms.ToTensor
      - class_path: utils.transforms.Resize
        init_args:
          size: ${data_params.image_size_input}
      - class_path: utils.transforms.MaskPostProcess
      - class_path: utils.transforms.ImageNormalize
        init_args:
          mean: ${data_params.image_mean}
          std: ${data_params.image_std}
    label_mode: "pascal_voc"
    train_sample_indices: [2307, 1032, 4588, 10388, 219, 2511, 9082, 2397, 4238, 4037, 9289, 3353, 3529, 4530, 2085, 16, 202, 928, 4393, 5425]
    test_sample_indices: null
    add_sb: True

data_params:
  image_size_original: [512, 512]
  image_size_input: [504, 504]
  image_mean: [0.485, 0.456, 0.406]
  image_std: [0.229, 0.224, 0.225]

ckpt_path: null

optimizer:
  class_path: torch.optim.Adam
  init_args:
    lr: 0.001

lr_scheduler:
  class_path: torch.optim.lr_scheduler.CosineAnnealingLR
  init_args:
    T_max: ${trainer.max_epochs}
